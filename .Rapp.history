results.list <- readRDS("~/Dropbox/Documents/Chaco/Tree Rings/Results/ResultsList.rds")
head(results.list[[1]])
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
results.list.names <- names(results.list)
options(java.parameters = "-Xmx2048m")
pblapply(results.list.names, function(x) write.xlsx2(results.list[[x]], file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName=x, append=TRUE))
library(pbapply)
pblapply(results.list.names, function(x) write.xlsx2(results.list[[x]], file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName=x, append=TRUE))
library(xlsx)
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
library(xlsx)
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
library(xlsx)
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
library(xlsx)
library(pbapply)
result.frame <- readRDS("~/Dropbox/Documents/Chaco/Tree Rings/Results/ResultFrame.rds")#
results.list <- readRDS("~/Dropbox/Documents/Chaco/Tree Rings/Results/ResultsList.rds")#
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")#
#
results.list.names <- names(results.list)
options(java.parameters = "-Xmx4096m")
pblapply(results.list.names, function(x) write.xlsx2(results.list[[x]], file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName=x, append=TRUE))
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
library(pbapply)
library(xlsx)
options(java.parameters = "-Xmx4096m")
jgc <- function()#
{#
  gc()#
  .jcall("java/lang/System", method = "gc")#
}
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
result.frame <- readRDS("~/Dropbox/Documents/Chaco/Tree Rings/Results/ResultFrame.rds")#
results.list <- readRDS("~/Dropbox/Documents/Chaco/Tree Rings/Results/ResultsList.rds")
write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
results.list.names <- names(results.list)
pblapply(results.list.names, function(x) write.xlsx2(results.list[[x]], file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName=x, append=TRUE))
openxlsx::write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
pblapply(results.list.names, function(x) openxlsx::write.xlsx(results.list[[x]], file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName=x, append=TRUE))
openxlsx::write.xlsx(result.frame, file="/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/DendrochronologyResults.xlsx", sheetName="Summary")
?write.xlsx
write.xlsx(results.list, "ChacoTreesFullDates.xlsx", colWidths = c(NA, "auto", "auto"))
write.xlsx(results.list, "/Users/lee/Dropbox/Documents/Chaco/Tree Rings/Results/ChacoTreesFullDates.xlsx", colWidths = c(NA, "auto", "auto"))
x <- c(1, 2, 3, T)
y <- c(T, 5, 6, 7)
xy.frame <- data.frame(x, y)
xy.frame[xy.frame=="T"] <- 999
xy.frame
xy.frame <- data.frame(x, y)
xy.frame
x <- c(1, 2, 3, "T")
y <- c("T", 5, 6, 7)
xy.frame <- data.frame(x, y)
xy.frame
xy.frame[xy.frame=="T"] <- 999
xy.frame
xy.frame <- data.frame(x, y)
xy.frame[xy.frame=="T"] <- "999"
xy.frame
xy.frame <- data.frame(x, y)
xy.frame[which(xy.frame=="T", arr.ind=TRUE), 3] <- 999
xy.frame
concentration.table[concentration.table==T"] <- 999
)
xy.frame <- data.frame(x, y)
xy.frame[xy.frame ==T] <- 999
xy.frame
xy.frame[xy.frame ==as.chacter("T")] <- 999
xy.frame[xy.frame ==as.character("T")] <- 999
xy.frame
xy.frame <- data.frame(x, y)
xy.frame[xy.frame =="T"] <- as.factor(999)
xy.frame
xy.frame <- data.frame(x, y, stringsAsFactors=TRUE)
xy.frame[xy.frame =="T"] <- as.factor(999)
xy.frame
xy.frame <- data.frame(x=numeric(3), y=numeric(3))
xy.frame
xy.frame <- data.frame(x=character(3), y=character(3))
xy.frame
xy.frame <- data.frame(x=factor(3), y=factor(3))
xy.frame
xy.frame <- data.frame(x=factor, y=factor)
xy.frame <- data.frame(x, y, stringsAsFactors=FALSE)
xy.frame
xy.frame[xy.frame =="T"] <- as.factor(999)
xy.frame
xy.frame <- data.frame(x, y, stringsAsFactors=FALSE)
xy.frame[xy.frame =="T"] <- 999
xy.frame
lm(y~x, data=xy.frame)
library(shiny)
runApp("~/GitHub/CloudCal")
library(rsconnect)
deployApp("~/GitHub/CloudCal", appName="cloudCal")
x
xy.frame$x <- c()
xy.frame
runApp("~/GitHub/CloudCal")
xy.frame
runApp("~/GitHub/CloudCal")
?saveRDS
runApp("~/GitHub/CloudCal")
?saveRDS
runApp("~/GitHub/CloudCal")
?readRDS
runApp("~/GitHub/CloudCal")
library(shiny)
runApp("~/GitHub/CloudCal")
library(shiny)
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCal")
test <- readRDS("~/Desktop/booluk.quant")
str(test)
test2 <- readRDS("~/Desktop/Cal Variations/Spectra/lukasTime.quant")
str(test2)
library(shiny)
runApp("~/GitHub/CloudCal")
library(shiny)
runApp("~/GitHub/CloudCal")
library(rsconnect)
deployApp("~/GitHub/CloudCal", appName="cloudCal")
x <- c(1, 2, 3, 4, 5, 6)
y <- c(5, 6, 7, 8, 9)
z <- c(4, 5, 6, 7, 8)
xyz.frame <- data.frame(x, y, z)
x <- c(1, 2, 3, 4, 5)
xyz.frame <- data.frame(x, y, z)
ggplot(aes(y~.), data=xyz.frame)
x*xyz.frame
rbind(xyz.frame)
rowSums(xyz.frame)
rowMeans(xyz.frame)
runApp("~/GitHub/CloudCal")
library(shiny)
?checkboxInput
runApp("~/GitHub/CloudCal")
library(shiny)
runApp("~/GitHub/CloudCal")
library(shiny)
runApp("~/GitHub/CloudCal")
N=1e4
N
runApp("~/GitHub/CloudCal")
is.null(x)
exists(x)
exists("x")
x <- c(1, 2, 3)
exists("x")
runApp("~/GitHub/CloudCal")
x
y <- c(4, 5, 6)
xy.frame <- data.frame(x, y)
exists(x[,1])
?exists
exists(y, x)
exists(y, where=xy.frame)
exists(x=y, where=xy.frame)
xy.list <- list(x, y)
names(xy.list) <- c("x", "y")
xy.list
is.null(xy.list[,"x"])
is.null(xy.list["x"])
is.null(xy.list["z"])
xy.list[["x"]]
is.null(xy.list[["bob"]])
runApp("~/GitHub/CloudCal")
big <- read.csv(file="/Users/lee/Google Drive/Liang Bua XRF/Stone 2017/Rock Types/NetCountsAll.csv")
library(shiny)
library(pvclust)
runApp("~/Github/CloudCore")
runApp("~/Github/CloudCal")
library(shiny)
runApp("~/Github/CloudCal")
library(shiny)
runApp("~/Github/CloudCal")
runApp("~/Github/Cezanne")
test <- readRDS("~/Desktop/T3S1716MudrockMajor.quant")
str(test)
calList <- test$calList
is.null(calList[["Fe.K.alpha"]])
is.null(calList[["Ge.K.alpha"]])
calList[[1]][[1]]$CalTable$CalType
runApp("~/Github/CloudCal")
library(shiny)
runApp("~/Github/CloudCal")
test <- readRDS("~/Desktop/T3S1716MudrockMajor.quant")
calList <- test$calList
calList[[input$calcurveelement]][[1]]$CalTable$CalType
calList[["Fe.K.alpha"]][[1]]$CalTable$CalType
str(calList[["Fe.K.alpha"]])
calList[["Fe.K.alpha"]][[1]]$Intercept
calList[["Fe.K.alpha"]][[1]]$Slope
library(shiny)
calList[["Fe.K.alpha"]][[1]]$Slope
runApp("~/Github/CloudCal")
runApp("~/Github/Cezanne")
library(shiny)
runApp("~/Github/Cezanne")
library(shiny)
runApp("~/Github/CloudCal")
library(shiny)
runApp("~/Github/CloudCal")
test <- readRDS("~/Desktop/900F4470MudrockNewHe.quant")
str(test)
calList <- test$calList
calList[["Fe.K.alpha"]]$StandardsUsed
calList[["Fe.K.alpha"]]$CalTable$StandardsUsed
calList[["Fe.K.alpha"]]$StandardsUsed
calList[["Fe.K.alpha"]][[5]]
ls(calList)
ls(calList[["Al.K.alpha"]])
ls(calList[[,"Al.K.alpha"]])
calList[["Al.K.alpha"]]
calList[["Al.K.alpha"]][[1]]$StandardsUsed
calList[["Al.K.alpha"]][[1]][[5]]
calList[["Al.K.alpha"]][[1]][[4]]
library(shiny)
runApp("~/GitHub/CloudCal")
library(rsconnect)
deployApp("~/Desktop/CloudCal", appName="cloudCal")
runApp("~/GitHub/CloudCal")
runApp("~/GitHub/CloudCore")
library(shiny)
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCal")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
?rowSums
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
?sliderInput
?sliderInput
runApp("~/GitHub/CloudCore")
?numericInput
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
runApp("~/GitHub/CloudCore")
